#!/bin/bash
# shellcheck disable=SC2001
# shellcheck disable=SC1091
# shellcheck disable=SC2086
# shellcheck disable=SC1090
#! /bin/bash

set -eu

BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd .. && pwd)"
VERSION=$(<"$BASEDIR/VERSION")
# . "$BASEDIR/lib/shared.bash"

echo -e "~~~ :bash: \033[33mSetup\033[0m Buildkite Plugin v$VERSION"

echo "Checking for Ruby"
if test -f ".ruby-version"; then
  export RUBY_VERSION=$(cat .ruby-version)
  rvm install ruby-${RUBY_VERSION}
  # rvm alias delete default
  rvm alias create default ruby-${RUBY_VERSION}
  source $(rvm default do rvm env --path)
  gem install bundler
  echo "Ruby version: ${RUBY_VERSION}. Also exported to RUBY_VERSION"
  ruby -v
fi

echo "Checking for NodeJS"
if test -f ".node-version"; then
  export NODE_VERSION=$(cat .node-version)
  n ${NODE_VERSION}
  echo "Node version: ${NODE_VERSION}. Also exported to NODE_VERSION"
  echo "Yarn version: ${NODE_VERSION}"
else
  export NODE_VERSION="${NODE_CURRENT_VERSION}"
  n ${NODE_VERSION}
  echo "Fallback to NodeJS latest (NODE_CURRENT_VERSION) version"
  echo "Node version: ${NODE_VERSION}. Also exported to NODE_VERSION"
fi

echo "Checking for Golang"
if test -f ".go-version"; then
  export GO_VERSION=$(cat .go-version)
  goenv install --skip-existing ${GO_VERSION}
  goenv global ${GO_VERSION}
  echo "Golang version: ${GO_VERSION}. Also exported to GO_VERSION"
  go version
else
  echo "No Golang. Skipping..."
fi
